
https://stackoverflow.com/questions/45464245/angular-unexpected-token-a-constructor-method-accessor-or-property-was-expe
https://stackoverflow.com/questions/47732353/why-cant-we-use-the-let-keyword-inside-a-class-in-typescript
refer class vs interface in ts


Difference between let and const?
How to find duplicates in array?
Design pattern in JavaScript?
What is Closure?
What is Event Bubbling?
What is Hosting?
What are the ways to create object in JavaScript?
What is the purpose of ‘this’ keyword?

Interview QnA, angular,js,html&css
prepare

include, local and sessionstoarge in resume and learn from akshay and more
include, data visualization in one project, know how to overide default and everything, pick ypur own visualization



1. ajax
2. fetch https://itnext.io/that-data-looks-so-fetching-on-you-understanding-the-js-fetch-api-880eae0c8d25
async/await/promises
json
console 
data_array_object_access.html
3. cross origin
tree shaking
4. debounce
5. throttling
6. search
7. filtering
8. sorting

regex and oops
Algorithms

download and check implmention and how it works, big projects on angular and js

host apps and web apps in github pages, js and angular -> js with sorting filtering,searching ....
angular with forms and ...
    
    
    
    
    function fetchTime() {

        // console.log("apna time ayega");

        var presentLoggedIn = Date.now();
        var lastLoggedIn = presentLoggedIn;
       

        setTimeout(function(){
            if(presentLoggedIn<Date.now()){
            console.log(":inside if:");
            lastLoggedIn = presentLoggedIn;
            presentLoggedIn = Date.now();
            console.log("presentLoggedIn",presentLoggedIn);
            console.log("lastLoggedIn",lastLoggedIn);
          
        }
        },100);
        // console.log(Date.now());
        
        


    }

    fetchTime();
    
    
    change dropdown value based on another dropdown reactjs
    
    <!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>MultiSelect React App</title>
</head>

<body>

    <div id="root"></div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/react/15.4.2/react.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react/15.4.2/react-dom.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/6.21.1/babel.min.js"></script>

<script type="text/babel">
                    class MultiSelect extends React.Component {
                                    constructor(props) {
                                    super(props);
                                    this.state = {

                                        country: '',countryState:'',city:'',
                                        data:[
                                        
                                                  { CountryName: 'India', States: [
                                                                                {
                                                                                StateName:"Maharashtra",
                                                                                Cities:[
                                                                                        "Pune",
                                                                                        "Nagpur",
                                                                                        "Mumbai"
                                                                                        ]
                                                                                },
                                                                                {
                                                                                StateName:"Kerala",
                                                                                Cities:[
                                                                                            "Kochi",
                                                                                            "Munnar"
                                                                                        ]
                                                                                }
                                                                            ]
                                                    },

                                                    { CountryName: 'USA', States: [
                                                                                {
                                                                                StateName:"Texas",
                                                                                Cities:[
                                                                                        "dallas"
                                                                                        ]
                                                                                },
                                                                                {
                                                                                StateName:"FLorida",
                                                                                Cities:[
                                                                                            "jacksonville",
                                                                                            "tallhase"
                                                                                        ]
                                                                                }
                                                                            ]
                                                    },


                                        
                                            
                                        ] // data
                                            
                                        
                                            } // this.state   
                        

                                    this.handleChange1 = this.handleChange1.bind(this);
                                    this.handleChange2 = this.handleChange2.bind(this);
                                    this.handleChange3 = this.handleChange3.bind(this);
                                    this.handleSubmit = this.handleSubmit.bind(this);
                                } 

                                handleChange1(event) {
                                    //console.log(event);
                                    
                                    this.setState({country: event.target.value});
                                    console.log('onchange->',event.target.value);
                                    
                                }

                                handleChange2(event) {
                                    //console.log(event);
                                    
                                    this.setState({countryState: event.target.value});
                                
                                    console.log('onchange->',event.target.value);
                                    
                                }

                                handleChange3(event) {
                                    //console.log(event);
                                   
                                    this.setState({city: event.target.value});
                                    console.log('onchange->',event.target.value);
                                    
                                }

                                handleSubmit(event) {
                                    //console.log(event);
                                    event.preventDefault();
                                    alert('submitted: ' + this.state.country + '' + this.state.countryState + '' + this.state.city );
                                    //event.preventDefault();
                                }

                       render() {
       
                        let { data,country,countryState,city } = this.state;

                        let { cntry } = data;
                        cntry = data.map((cn,indx)=> <option key={indx} value={cn.CountryName}>{cn.CountryName}</option>);

                        let { cntryStates } = cntry;
                        cntryStates = data.map( n =>
                            n.States.map((st,i)=> <option key={i} value={st.StateName}>{st.StateName}</option>)
                        );

                        let { stateCities } = data;
                        stateCities = data.map( n =>
                            n.States.map((st,i)=> <option key={i} value={st.Cities}>{st.Cities}</option>)
                        );

                                    
                        return (

                           <form onSubmit={this.handleSubmit}>

                            <label> Select Country : <select value={country} onChange={this.handleChange1}> 
                                                            
                                                            {
                                                                cntry
                                                            }
                                                      </select>      
                            </label>
                            <label> Select State : <select value={countryState} onChange={this.handleChange2}> 
                                                              
                                    {cntryStates}
                                                       

                                                      </select>      
                            </label>
                            <label> Select City : <select value={city} onChange={this.handleChange3}> 
                                    {stateCities}
                                                              
                                                      </select>      
                            </label> <br /> <br />
                            
                            <input type="submit" value="Submit"/> <br/>
                            <label> you selected:-> 
                             country : <b> {this.state.country} </b> state: <b> {this.state.countryState} </b> city: <b> {this.state.city}</b>
                            </label> <br/> <br/>
                            <label> in json format:->
                                    <p>{JSON.stringify(this.state)}</p>
                            </label>

                           </form> 

                        );
                                } // render
                                                           } // component
            ReactDOM.render(
                <MultiSelect />,
                document.getElementById('root')
            );
</script>
</body>

</html>


..............................
img compress

https://www.npmjs.com/package/ng2-image-compress

https://www.npmjs.com/package/ngx-image-compress

<div>
    
    <label> Upload image here: </label>
    <input type="file" name="pic" accept="image/*" (change)="onFileChange($event)" />



</div>


import { Component } from '@angular/core';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {

  public imgHeight:number;
  public imgWidth:number;
  public imgSize:number;


  onFileChange(e){


    // img size

     this.imgSize = e.target.files[0].size;
    console.log('image size in KBs:->',this.imgSize/1000,'KB');

    // img width and height

    this.imgWidth = e.target.offsetHeight;
    this.imgHeight =  e.target.offsetWidth;
    console.log('width',this.imgWidth,'height',this.imgHeight);
  

  
    

  }
  
}


https://zocada.com/compress-resize-images-javascript-browser/

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>
<body>

        <div>
    
                <label> Upload image here: </label>
                <input type="file" name="pic" accept="image/*" onchange="onFileChange(event)" />
            
            
            
            </div>


    <script>

        function onFileChange(e){

            console.log(e);

            let imgFile = e.target.files[0];
            console.log(imgFile);

            const reader = new FileReader();
            reader.readAsDataURL(imgFile);
            const img = new Image();
            img.src = e.target.result; 
            console.log(img.src);

            const elem = document.createElement('canvas');
            elem.width = width;
            elem.height = height;
            
            
        }



    </script>    
    
</body>
</html>
